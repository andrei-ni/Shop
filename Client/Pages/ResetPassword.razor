@page "/reset-password"
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.Extensions.Primitives
@inject IAuthService AuthService
@inject NavigationManager _nav


<PageTitle>Schimba parola</PageTitle>
<br/>
<br/>
<div class="login">
    @if (user.Token == string.Empty)
    {
        <br/>
        <br/>
        <span>Aceasta pagina nu poate fi apelata fara un simbol sau email valid.</span>
        <br/>
        <br/>
        <br/>
    }
    else
    {
            <EditForm Model="user" OnValidSubmit="HandleReset">
            <DataAnnotationsValidator />
            <h5 class="pt-3 text-info text-center">Schimba parola</h5>
            <div class="mb-3 pt-2">
                <label Disabled="true"> Adresa de email</label>
                <input id="email"  class="form-control" type="email" placeholder="@userEmail" Disabled="true"/>
             </div>
            @*<div class="mb-3 pt-2">
                    <label for="@(()=> user.Token)" Disabled="true" hidden="hidden"> Token</label>
                    <input id="email" @bind-value="user.Token" class="form-control" type="email" placeholder="user.UserEmail" 
                    Disabled="true" hidden="hidden"/>
                </div>*@

            <div class="mb-3">
                    <label for="@(()=> user.NewPassword)">Parola noua</label>
                <input id="password" @bind-value="user.NewPassword" class="form-control" type="password" />
                <ValidationMessage For="@(()=> user.NewPassword)" />
            </div>
                <div class="mb-3">
                    <label for="@(()=> user.ConfirmPassword)">Confirma parola</label>
                    <input id="password" @bind-value="user.ConfirmPassword" class="form-control" type="password" />
                        <ValidationMessage For="@(()=> user.ConfirmPassword)" />
                </div>

            <button type="submit" class="btn btn-primary mb-3">Schimba parola</button>
                <br />
                <span style="color:red">@message</span>
                <br />
                <br />
                <div hidden="@Show">
                <button class="btn btn-primary mb-3" @onclick="@(()=>_nav.NavigateTo("/login"))">Intra in cont</button>
                 </div>
                <br >
                <br />
        </EditForm>

    }
</div>



@code {
    private UserResetPassword user = new UserResetPassword();
    private StringValues token = String.Empty;
    private StringValues email = String.Empty;
    private string? userToken { get; set; }
    private string? userEmail { get; set; }
    string message = string.Empty;
    public bool Show = true;

    protected override void OnInitialized()
    {
        var uri = _nav.ToAbsoluteUri(_nav.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("token", out token))
        {
            userToken = Convert.ToString(token);
            user.Token = userToken;
        }
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("um", out email))
        {
            userEmail = Convert.ToString(email);
        }

    }

    async Task HandleReset()
    {
        //user.UserEmail = userEmail;
        user.NewPassword = user.NewPassword;
        user.ConfirmPassword = user.ConfirmPassword;
        var result = await AuthService.ResetPassword(user);
        if (!result.Success)
        {
            message = "A aparut o eroare.";
        }
        else
        {
            message = "Parola a fost schimbata.";
            Show = !Show;
        }
    }


}
