@page "/admin/client-orders/{orderId:int}"
@inject IOrderService OrderService
@inject IAuthService AuthService
@attribute [Authorize(Roles = "Admin")]

<PageTitle>Detalii comanda client</PageTitle>
<MudBreadcrumbs Items="_items" MaxItems="5"></MudBreadcrumbs>
<h3>Detalii comanda client</h3>

@if (order == null)
{
	<span>Se incarca pagina...</span>
	<br />
}
else
{
	<h5>Comanda din @order.OrderDate.ToString("dd-MM-yyyy")</h5>
	<div>
		@foreach (var product in order.Products)
		{
			<div class="container">
				<div class="image-wrapper">
					<img src="@product.ImageUrl" class="image"/>
				</div>
				<div class="name">
					<h5><a href="/product/@product.ProductId">@product.Name</a></h5>
					<span>Cantitate: @product.Quantity</span>
				</div>
				<div class="product-price">@product.TotalPrice.ToString("0.00") Lei</div>
			</div>
		}
		<div>
			<hr />
			@foreach (var user in AuthService.UserList)
			{
				if (order.UserId == user.Id)
				{
					<h5>Detalii client:</h5>
					<span>Nume: @user.Email</span>

					<br />
					<span class="wb;">Adresa: @user.Address.City, @user.Address.Street, @user.Address.PostalCode, @user.Address.State</span>
					<br />
					<span>Telefon: @user.Address.PhoneNumber</span>
					<br />
					<br />
					<h5>Companie:</h5>
					if (@user.Address.CompanyVat != string.Empty)
					{
						<span>@user.Address.CompanyName</span>
						<br />
						<span>@user.Address.CompanyVat</span>
						<br />
						<span class="wb;">@user.Address.CompanyAddress</span>
						<br />
					}
					else
					{
						<span>&nbsp;--</span>
					}

					<br />
					<br />
					if (order.Message != string.Empty)
					{
						<span class="wb;">Mesaj: @order.Message</span>
						<br />
					}
					<br />
					if (order.Image != string.Empty)
					{
						<span>Imagine:</span>
						<br />
						<img src="@order.Image" style="width: 300px;" />
						<br />
					}

				}
			}
		</div>
		<div class="product-price"><span class="small">*Transport @costLivrare.ToString("0.00") Lei inclus in pret total</span><br>Total: @totalPrice.ToString("0.00") Lei</div>
	</div>
}
<br/>

@code {
	[Parameter]
	public int orderId { get; set; }

	double costLivrare = 20.00;
	double totalPrice = 0.00;
	double price = 0.00;

	OrderDetailsResponse order = null !;
	protected override async Task OnInitializedAsync()
	{
		order = await OrderService.AdminGetOrderDetails(orderId);
		price = order.TotalPrice;
		totalPrice = price + costLivrare;
		await AuthService.GetUsers(1);
	}
	private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
	{
		new BreadcrumbItem("Prima pagina", href: "/"),
		new BreadcrumbItem("Inapoi", href: "javascript:history.go(-1)"),
	};
}
